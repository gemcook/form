// @flow

declare class Class0 {

  AT_TARGET: number;
  BUBBLING_PHASE: number;
  CAPTURING_PHASE: number;
  bubbles: boolean;
  cancelable: boolean;
  currentTarget: EventTarget;
  deepPath?: () => Array<EventTarget>;
  defaultPrevented: boolean;
  eventPhase: number;
  isTrusted: boolean;
  scoped: boolean;
  srcElement: Element;
  target: EventTarget;
  timeStamp: number;
  type: string;
  constructor(type: string, eventInitDict?: {bubbles?: boolean, cancelable?: boolean, composed?: boolean, scoped?: boolean}): void;
  initEvent(type: string, bubbles: boolean, cancelable: boolean): void;
  preventDefault(): void;
  stopImmediatePropagation(): void;
  stopPropagation(): void;
}
declare export function Checkbox(props: {} & {custom: {ref?: (ref: mixed /* UNEXPECTED TYPE: EvalT */) => mixed /* UNEXPECTED TYPE: EvalT */}, input: {checked?: boolean, name: string, onBlur: {}, onChange: {}, onDragStart: {}, onDrop: {}, onFocus: {}, value: any}, meta: {active: boolean, asyncValidating: boolean, autofilled: boolean, dirty: boolean, dispatch: any, error?: any, form: string, initial?: any, invalid: boolean, pristine: boolean, submitFailed: boolean, submitting: boolean, touched: boolean, valid: boolean, visited: boolean, warning?: any}}): $Exact<{+key: string | number | null, +props: mixed /* UNEXPECTED TYPE: EvalT */, +ref: any, +type: string}>;
declare export var Dropdown: {contextTypes?: any, displayName?: ?string, propTypes?: any} | Class<React$Component<any, any>>;
declare export function FormProvider(props: {children: Function} & {custom: {ref?: (ref: mixed /* UNEXPECTED TYPE: EvalT */) => mixed /* UNEXPECTED TYPE: EvalT */}, input: {checked?: boolean, name: string, onBlur: {}, onChange: {}, onDragStart: {}, onDrop: {}, onFocus: {}, value: any}, meta: {active: boolean, asyncValidating: boolean, autofilled: boolean, dirty: boolean, dispatch: any, error?: any, form: string, initial?: any, invalid: boolean, pristine: boolean, submitFailed: boolean, submitting: boolean, touched: boolean, valid: boolean, visited: boolean, warning?: any}}): $Exact<{+key: string | number | null, +props: mixed /* UNEXPECTED TYPE: EvalT */, +ref: any, +type: any}>;
declare export function Input<C>(props: {autocomplete: string, dark: boolean, disabled: boolean, fluid: boolean, maxLength: number, outline: boolean, placeholder: string, type: string} & {custom: {ref?: (ref: mixed /* UNEXPECTED TYPE: EvalT */) => mixed /* UNEXPECTED TYPE: EvalT */}, input: {checked?: boolean, name: string, onBlur: {}, onChange: {}, onDragStart: {}, onDrop: {}, onFocus: {}, value: any}, meta: {active: boolean, asyncValidating: boolean, autofilled: boolean, dirty: boolean, dispatch: any, error?: any, form: string, initial?: any, invalid: boolean, pristine: boolean, submitFailed: boolean, submitting: boolean, touched: boolean, valid: boolean, visited: boolean, warning?: any}}): $Exact<{+key: string | number | null, +props: mixed /* UNEXPECTED TYPE: EvalT */, +ref: any, +type: string}>;
declare export var Radio: Class<React$Component<any, any>>;
declare export function Search(props: {autocomplete: string, disabled: boolean, fluid: boolean, outline: boolean, placeholder: string, removeSearchWord: (index: number) => void, searchWords: Array<string>, style: Object, type: string} & {custom: {ref?: (ref: mixed /* UNEXPECTED TYPE: EvalT */) => mixed /* UNEXPECTED TYPE: EvalT */}, input: {checked?: boolean, name: string, onBlur: {}, onChange: {}, onDragStart: {}, onDrop: {}, onFocus: {}, value: any}, meta: {active: boolean, asyncValidating: boolean, autofilled: boolean, dirty: boolean, dispatch: any, error?: any, form: string, initial?: any, invalid: boolean, pristine: boolean, submitFailed: boolean, submitting: boolean, touched: boolean, valid: boolean, visited: boolean, warning?: any}}): $Exact<{+key: string | number | null, +props: mixed /* UNEXPECTED TYPE: EvalT */, +ref: any, +type: string}>;
declare export function TextArea<C>(props: {autoHeight: boolean, dark: boolean, disabled: boolean, fluid: boolean, outline: boolean, placeholder: string, rows: number, style: Object} & {custom: {ref?: (ref: mixed /* UNEXPECTED TYPE: EvalT */) => mixed /* UNEXPECTED TYPE: EvalT */}, input: {checked?: boolean, name: string, onBlur: {}, onChange: {}, onDragStart: {}, onDrop: {}, onFocus: {}, value: any}, meta: {active: boolean, asyncValidating: boolean, autofilled: boolean, dirty: boolean, dispatch: any, error?: any, form: string, initial?: any, invalid: boolean, pristine: boolean, submitFailed: boolean, submitting: boolean, touched: boolean, valid: boolean, visited: boolean, warning?: any}}): $Exact<{+key: string | number | null, +props: mixed /* UNEXPECTED TYPE: EvalT */, +ref: any, +type: string}>;
declare export var validates: {search: <C>(values: Object) => {searchWord: string}};
