// @flow
import * as React from 'react';

declare export function Checkbox(props: {input: Object, meta: Object}): $Exact<{
  +key: string | number | null,
  +props: mixed /* UNEXPECTED TYPE: EvalT */,
  +ref: any,
  +type: React.ElementType,
}>;
declare export function Input<C>(props: {
  autocomplete: string,
  className: Object,
  dark: boolean,
  disabled: boolean,
  fluid: boolean,
  input: Object,
  maxLength: number,
  meta: Object,
  outline: boolean,
  placeholder: string,
  style: Object,
  type: string,
}): $Exact<{
  +key: string | number | null,
  +props: mixed /* UNEXPECTED TYPE: EvalT */,
  +ref: any,
  +type: React.ElementType,
}>;
declare export function Search<C>(props: {
  autocomplete: string,
  className: Object,
  disabled: boolean,
  fluid: boolean,
  input: Object,
  meta: Object,
  outline: boolean,
  placeholder: string,
  removeSearchWord: (index: number) => void,
  searchWords: Array<string>,
  style: Object,
  type: string,
}): $Exact<{
  +key: string | number | null,
  +props: mixed /* UNEXPECTED TYPE: EvalT */,
  +ref: any,
  +type: React.ElementType,
}>;
declare export function TextArea<C>(props: {
  autoHeight: boolean,
  className: Object,
  dark: boolean,
  disabled: boolean,
  fluid: boolean,
  input: Object,
  meta: Object,
  outline: boolean,
  placeholder: string,
  rows: number,
  style: Object,
}): $Exact<{
  +key: string | number | null,
  +props: mixed /* UNEXPECTED TYPE: EvalT */,
  +ref: any,
  +type: React.ElementType,
}>;
declare export var validates: {
  search: <C>(values: Object) => {searchWord: string},
};
