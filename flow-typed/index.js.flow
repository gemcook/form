// @flow

declare export function Checkbox(props: {} & {as?: any, checked?: boolean, className?: string, defaultChecked?: boolean, defaultIndeterminate?: boolean, disabled?: boolean, fitted?: boolean, id?: number | string, indeterminate?: boolean, label?: any, name?: string, onChange?: (event: SyntheticEvent<any>, data: Object) => void, onClick?: (event: SyntheticEvent<any>, data: Object) => void, onMouseDown?: (event: SyntheticEvent<any>, data: Object) => void, radio?: any, readOnly?: boolean, slider?: any, tabIndex?: number | string, toggle?: any, type?: "checkbox" | "radio", value?: string | number} & {custom: {ref?: (ref: mixed /* UNEXPECTED TYPE: EvalT */) => mixed /* UNEXPECTED TYPE: EvalT */}, input: {checked?: boolean, name: string, onBlur: {}, onChange: {}, onDragStart: {}, onDrop: {}, onFocus: {}, value: any}, meta: {active: boolean, asyncValidating: boolean, autofilled: boolean, dirty: boolean, dispatch: any, error?: any, form: string, initial?: any, invalid: boolean, pristine: boolean, submitFailed: boolean, submitting: boolean, touched: boolean, valid: boolean, visited: boolean, warning?: any}}): $Exact<{+key: string | number | null, +props: mixed /* UNEXPECTED TYPE: EvalT */, +ref: any, +type: any}>;
declare export var Dropdown: Class<React$Component<Object, any>>;
declare export function FormProvider(props: {children: Function} & {custom: {ref?: (ref: mixed /* UNEXPECTED TYPE: EvalT */) => mixed /* UNEXPECTED TYPE: EvalT */}, input: {checked?: boolean, name: string, onBlur: {}, onChange: {}, onDragStart: {}, onDrop: {}, onFocus: {}, value: any}, meta: {active: boolean, asyncValidating: boolean, autofilled: boolean, dirty: boolean, dispatch: any, error?: any, form: string, initial?: any, invalid: boolean, pristine: boolean, submitFailed: boolean, submitting: boolean, touched: boolean, valid: boolean, visited: boolean, warning?: any}}): $Exact<{+key: string | number | null, +props: mixed /* UNEXPECTED TYPE: EvalT */, +ref: any, +type: any}>;
declare export function Input<C>(props: {autocomplete?: string, dark?: boolean, maxLength?: number, outline?: boolean, placeholder?: string} & {action?: any, actionPosition?: "left", as?: any, children?: any, className?: string, disabled?: boolean, error?: boolean, fluid?: boolean, focus?: boolean, icon?: any, iconPosition?: "left", inverted?: boolean, label?: any, labelPosition?: "left" | "right" | "left corner" | "right corner", loading?: boolean, onChange?: (event: SyntheticEvent<any>, data: Object) => void, size?: "mini" | "tiny" | "small" | "medium" | "large" | "big" | "huge" | "massive", tabIndex?: number | string, transparent?: boolean, type?: string} & {custom: {ref?: (ref: mixed /* UNEXPECTED TYPE: EvalT */) => mixed /* UNEXPECTED TYPE: EvalT */}, input: {checked?: boolean, name: string, onBlur: {}, onChange: {}, onDragStart: {}, onDrop: {}, onFocus: {}, value: any}, meta: {active: boolean, asyncValidating: boolean, autofilled: boolean, dirty: boolean, dispatch: any, error?: any, form: string, initial?: any, invalid: boolean, pristine: boolean, submitFailed: boolean, submitting: boolean, touched: boolean, valid: boolean, visited: boolean, warning?: any}}): $Exact<{+key: string | number | null, +props: mixed /* UNEXPECTED TYPE: EvalT */, +ref: any, +type: any}>;
declare export var Radio: Class<React$Component<Object, any>>;
declare export function Search(props: {autocomplete: string, disabled: boolean, fluid: boolean, outline: boolean, placeholder: string, removeSearchWord: (index: number) => void, searchWords: Array<string>, style: Object, type: string} & {custom: {ref?: (ref: mixed /* UNEXPECTED TYPE: EvalT */) => mixed /* UNEXPECTED TYPE: EvalT */}, input: {checked?: boolean, name: string, onBlur: {}, onChange: {}, onDragStart: {}, onDrop: {}, onFocus: {}, value: any}, meta: {active: boolean, asyncValidating: boolean, autofilled: boolean, dirty: boolean, dispatch: any, error?: any, form: string, initial?: any, invalid: boolean, pristine: boolean, submitFailed: boolean, submitting: boolean, touched: boolean, valid: boolean, visited: boolean, warning?: any}}): $Exact<{+key: string | number | null, +props: mixed /* UNEXPECTED TYPE: EvalT */, +ref: any, +type: any}>;
declare export function TextArea<C>(props: {dark?: boolean, disabled?: boolean, outline?: boolean, placeholder?: string} & {as: any, autoHeight: boolean, onChange: (event: SyntheticEvent<any>, data: Object) => void, onInput: (event: SyntheticEvent<any>, data: Object) => void, rows: number | string, style: Object, value: number | string} & {custom: {ref?: (ref: mixed /* UNEXPECTED TYPE: EvalT */) => mixed /* UNEXPECTED TYPE: EvalT */}, input: {checked?: boolean, name: string, onBlur: {}, onChange: {}, onDragStart: {}, onDrop: {}, onFocus: {}, value: any}, meta: {active: boolean, asyncValidating: boolean, autofilled: boolean, dirty: boolean, dispatch: any, error?: any, form: string, initial?: any, invalid: boolean, pristine: boolean, submitFailed: boolean, submitting: boolean, touched: boolean, valid: boolean, visited: boolean, warning?: any}}): $Exact<{+key: string | number | null, +props: mixed /* UNEXPECTED TYPE: EvalT */, +ref: any, +type: any}>;
declare export var validates: {search: <C>(values: Object) => {searchWord: string}};
